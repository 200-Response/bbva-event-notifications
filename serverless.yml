# Happy Coding!
service: bbva-event-notifications

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs14.x
  region: ${self:custom.${opt:stage, self:provider.stage}REGION}
  memorySize: 1024
  lambdaHashingVersion: 20201221
  stage: development
  stackName: bbva-event-notifications 
  apiName: bbva-event-notifications 
  deploymentBucket:
    name: ${self:custom.${opt:stage, self:provider.stage}DeployBucket}
  apiGateway:
    description: bbva-event-notifications - manejo de alertas y notificaciones
  iamManagedPolicies:
    - arn:aws:iam::327581952167:policy/service-role/AWSQuickSightIAMPolicy
    - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
    - arn:aws:iam::aws:policy/AmazonSQSFullAccess
    - arn:aws:iam::aws:policy/AmazonSNSFullAccess
    - arn:aws:iam::aws:policy/AmazonKinesisFullAccess
  iamRoleStatements:
    - Effect: 'Allow'
      Action:
        - 'quicksight:CreateIngestion'
      Resource: arn:aws:quicksight:*:*:*
  
  environment:
    BBVA_ERRORS_SQS: ${self:custom.BBVA_ERRORS_SQS}
    BBVA_EVENTS_SQS: ${self:custom.BBVA_EVENTS_SQS}
    DYNAMO_TABLE_ERROR_CODES: ${self:custom.DYNAMO_TABLE_ERROR_CODES}
    DYNAMO_TABLE_TPV_DATA: ${self:custom.DYNAMO_TABLE_TPV_DATA}
    BBVA_DB_ISAM: ${self:custom.BBVA_DB_ISAM}
    AwsAccountId: ${self:custom.AwsAccountId}
    DataSetId: ${self:custom.DataSetId}
    IngestionId: ${self:custom.IngestionId}
    IngestionType: ${self:custom.IngestionType}

functions:
  main:
    handler: handler.main
    timeout: 600 #
    name: bbva-event-notifications 
    description: Función principal para el manejo de alertas y notificaciones 
    events:
      - http: ANY /
      - http: 'ANY {proxy+}' 
  trigger:
    handler: handler.eventHandlerForATriggerCall
    timeout: 60 #
    name: bbva-event-notifications-sqsTrigger
    description: Función para el manejo de alertas y notificaciones - trigger 
    events:
      - sqs:
            arn: ${self:custom.${opt:stage, self:provider.stage}SQS_ARN_ALERT}
            batchSize: 1
            maximumRetryAttempts: 2
      - sqs:
            arn: ${self:custom.${opt:stage, self:provider.stage}SQS_ARN_ERROR}
            batchSize: 1
            maximumRetryAttempts: 2
  triggerDynamo:
    handler: handler.eventHandlerForADynamoTriggerCall
    timeout: 60 #
    name: bbva-event-notifications-dynamoTrigger
    description: Función para el manejo de nuevos registros - dynamo trigger 
    # events:
  quicksightCronJob:
    handler: handler.cron
    timeout: 60 #
    name: bbva-quicksightCronJob
    description:  Función Cron job para llamar quicksight.createIngestion 
    events:
      - schedule: 
          name: quicksight-cron-job
          description: 'Cron job Función para llamar quicksight.createIngestion 1 min'
          rate: rate(1 minute)
          enabled: true


custom:
  productionDeployBucket: 'xserverless-bbva-deploys-1'
  developmentDeployBucket: 'xserverless-bbva-deploys-dev-1'

  productionSQS_ARN_ALERT: 'arn:aws:sqs:us-east-1:327581952167:bbva-event-alert.fifo'
  developmentSQS_ARN_ALERT: 'arn:aws:sqs:us-east-2:327581952167:bbva-event-alert.fifo'
  
  productionSQS_ARN_ERROR: 'arn:aws:sqs:us-east-1:327581952167:bbva-error-handler.fifo'
  developmentSQS_ARN_ERROR: 'arn:aws:sqs:us-east-2:327581952167:bbva-error-handler.fifo'
  
  productionREGION: 'us-east-1'
  developmentREGION: 'us-east-2'

  DYNAMO_TABLE_ERROR_CODES: 'TPV_Error_Codes'
  DYNAMO_TABLE_TPV_DATA: 'TPV_Data'

  BBVA_EVENTS_SQS: "https://sqs.us-east-1.amazonaws.com/327581952167/bbva-event-alert.fifo"
  BBVA_ERRORS_SQS: "https://sqs.us-east-1.amazonaws.com/327581952167/bbva-error-handler.fifo"

  BBVA_DB_ISAM: 'http://ec2-54-234-93-168.compute-1.amazonaws.com:3300/isam/'

  AwsAccountId: '327581952167'
  DataSetId: 'd639e92d-8c17-4497-a0c7-c8f93fb51a1f'
  IngestionId: 'TPV_Data_Ingestion_v2'
  IngestionType: 'INCREMENTAL_REFRESH'
