# Happy Coding!
service: bbva-event-notifications

frameworkVersion: '2'

provider:
  name: aws
  runtime: nodejs14.x
  region: ${self:custom.${opt:stage, self:provider.stage}REGION}
  memorySize: 1024
  lambdaHashingVersion: 20201221
  stage: development
  stackName: bbva-event-notifications 
  apiName: bbva-event-notifications 
  deploymentBucket:
    name: ${self:custom.${opt:stage, self:provider.stage}DeployBucket}
  apiGateway:
    description: bbva-event-notifications - manejo de alertas y notificaciones
  iamManagedPolicies:
    - arn:aws:iam::aws:policy/AmazonDynamoDBFullAccess
    - arn:aws:iam::aws:policy/AmazonSQSFullAccess
    - arn:aws:iam::aws:policy/AmazonSNSFullAccess
    - arn:aws:iam::aws:policy/AmazonKinesisFullAccess
  environment:
    BBVA_ERRORS_SQS: ${self:custom.BBVA_ERRORS_SQS}
    BBVA_EVENTS_SQS: ${self:custom.BBVA_EVENTS_SQS}
    DYNAMO_TABLE_ERROR_CODES: ${self:custom.DYNAMO_TABLE_ERROR_CODES}
    DYNAMO_TABLE_TPV_DATA: ${self:custom.DYNAMO_TABLE_TPV_DATA}
    # athenaOutputQuerys: ${self:custom.${opt:stage, self:provider.stage}BUCKET_ATHENA}

functions:
  main:
    handler: handler.main
    timeout: 600 #
    name: bbva-event-notifications 
    description: Función principal para el manejo de alertas y notificaciones 
    # environment:
      # BUCKET: ${self:custom.${opt:stage, self:provider.stage}BUCKET}
      # TEST_VARIABLE_0: ${self:custom.TEST_VARIABLE}
    events:
      - http: ANY /
      - http: 'ANY {proxy+}' 
  trigger:
    handler: handler.eventHandlerForATriggerCall
    timeout: 60 #
    name: bbva-event-notifications-sqsTrigger
    description: Función para el manejo de alertas y notificaciones - trigger 
    # environment:
      # TEST_VARIABLE_0: ${self:custom.TEST_VARIABLE}
      # # BUCKET: ${self:custom.${opt:stage, self:provider.stage}BUCKET}
    events:
      - sqs:
            arn: ${self:custom.${opt:stage, self:provider.stage}SQS_ARN_ALERT}
            batchSize: 1
            maximumRetryAttempts: 2
      - sqs:
            arn: ${self:custom.${opt:stage, self:provider.stage}SQS_ARN_ERROR}
            batchSize: 1
            maximumRetryAttempts: 2
  triggerDynamo:
    handler: handler.eventHandlerForADynamoTriggerCall
    timeout: 60 #
    name: bbva-event-notifications-dynamoTrigger
    description: Función para el manejo de nuevos registros - dynamo trigger 
    # environment:
      # TEST_VARIABLE_0: ${self:custom.TEST_VARIABLE}
      # # BUCKET: ${self:custom.${opt:stage, self:provider.stage}BUCKET}
    events:


custom:
  productionDeployBucket: 'xserverless-bbva-deploys-1'
  developmentDeployBucket: 'xserverless-bbva-deploys-dev-1'

  productionSQS_ARN_ALERT: 'arn:aws:sqs:us-east-1:327581952167:bbva-event-alert.fifo'
  developmentSQS_ARN_ALERT: 'arn:aws:sqs:us-east-2:327581952167:bbva-event-alert.fifo'
  
  productionSQS_ARN_ERROR: 'arn:aws:sqs:us-east-1:327581952167:bbva-error-handler.fifo'
  developmentSQS_ARN_ERROR: 'arn:aws:sqs:us-east-2:327581952167:bbva-error-handler.fifo'
  
  # productionS3ARN: 'arn:aws:s3:::tmp-s3-test-01'
  # developmentS3ARN: 'arn:aws:s3:::tmp-s3-test-dev-1'
  
  # productionBUCKET: 'tmp-s3-test-01'
  # developmentBUCKET: 'tmp-s3-test-dev-1'

  # productionBUCKET_ATHENA: 'athena-output-queries-1'
  # developmentBUCKET_ATHENA: 'athena-output-queries-dev-1'

  productionREGION: 'us-east-1'
  developmentREGION: 'us-east-2'

  # TEST_VARIABLE: 'algun valor'
  DYNAMO_TABLE_ERROR_CODES: 'TPV_Error_Codes'
  DYNAMO_TABLE_TPV_DATA: 'TPV_Data'

  BBVA_EVENTS_SQS: "https://sqs.us-east-1.amazonaws.com/327581952167/bbva-event-alert.fifo"
  BBVA_ERRORS_SQS: "https://sqs.us-east-1.amazonaws.com/327581952167/bbva-error-handler.fifo"